//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CharityOrganisation.DataLayer
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class CharityOrganisationDatabaseEntities : DbContext
    {
        public CharityOrganisationDatabaseEntities()
            : base("name=CharityOrganisationDatabaseEntities")
        {
            this.Configuration.LazyLoadingEnabled = false;
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<CharitableCaus> CharitableCauses { get; set; }
        public DbSet<Contact> Contacts { get; set; }
        public DbSet<Donation> Donations { get; set; }
        public DbSet<Role> Roles { get; set; }
        public DbSet<User> Users { get; set; }
        public DbSet<PollAnswer> PollAnswers { get; set; }
        public DbSet<PollQuestion> PollQuestions { get; set; }
        public DbSet<Event> Events { get; set; }
        public DbSet<Gallery> Galleries { get; set; }
        public DbSet<InterestingFact> InterestingFacts { get; set; }
        public DbSet<Menu> Menus { get; set; }
    
        public virtual int UserInsert(string email, string password, Nullable<int> role)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var roleParameter = role.HasValue ?
                new ObjectParameter("role", role) :
                new ObjectParameter("role", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UserInsert", emailParameter, passwordParameter, roleParameter);
        }
    
        public virtual int DonationInsert(Nullable<int> idUser, Nullable<decimal> amount, Nullable<System.DateTime> timeDonated, Nullable<int> cause, string firstName, string lastName, Nullable<int> anonymous, Nullable<long> creditCard, Nullable<int> csc)
        {
            var idUserParameter = idUser.HasValue ?
                new ObjectParameter("idUser", idUser) :
                new ObjectParameter("idUser", typeof(int));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("amount", amount) :
                new ObjectParameter("amount", typeof(decimal));
    
            var timeDonatedParameter = timeDonated.HasValue ?
                new ObjectParameter("timeDonated", timeDonated) :
                new ObjectParameter("timeDonated", typeof(System.DateTime));
    
            var causeParameter = cause.HasValue ?
                new ObjectParameter("cause", cause) :
                new ObjectParameter("cause", typeof(int));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("firstName", firstName) :
                new ObjectParameter("firstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("lastName", lastName) :
                new ObjectParameter("lastName", typeof(string));
    
            var anonymousParameter = anonymous.HasValue ?
                new ObjectParameter("anonymous", anonymous) :
                new ObjectParameter("anonymous", typeof(int));
    
            var creditCardParameter = creditCard.HasValue ?
                new ObjectParameter("creditCard", creditCard) :
                new ObjectParameter("creditCard", typeof(long));
    
            var cscParameter = csc.HasValue ?
                new ObjectParameter("csc", csc) :
                new ObjectParameter("csc", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DonationInsert", idUserParameter, amountParameter, timeDonatedParameter, causeParameter, firstNameParameter, lastNameParameter, anonymousParameter, creditCardParameter, cscParameter);
        }
    
        public virtual int ContactInsert(string name, string email, string message, Nullable<System.DateTime> timeSent)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var messageParameter = message != null ?
                new ObjectParameter("message", message) :
                new ObjectParameter("message", typeof(string));
    
            var timeSentParameter = timeSent.HasValue ?
                new ObjectParameter("timeSent", timeSent) :
                new ObjectParameter("timeSent", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ContactInsert", nameParameter, emailParameter, messageParameter, timeSentParameter);
        }
    
        public virtual int PollAnswerUpvote(Nullable<int> idAnswer)
        {
            var idAnswerParameter = idAnswer.HasValue ?
                new ObjectParameter("idAnswer", idAnswer) :
                new ObjectParameter("idAnswer", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PollAnswerUpvote", idAnswerParameter);
        }
    
        public virtual int CharitableCauseDelete(Nullable<int> idCause)
        {
            var idCauseParameter = idCause.HasValue ?
                new ObjectParameter("idCause", idCause) :
                new ObjectParameter("idCause", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CharitableCauseDelete", idCauseParameter);
        }
    
        public virtual int CharitableCauseInsert(string causeName)
        {
            var causeNameParameter = causeName != null ?
                new ObjectParameter("causeName", causeName) :
                new ObjectParameter("causeName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CharitableCauseInsert", causeNameParameter);
        }
    
        public virtual int CharitableCauseUpdate(string causeName, Nullable<int> idCause)
        {
            var causeNameParameter = causeName != null ?
                new ObjectParameter("causeName", causeName) :
                new ObjectParameter("causeName", typeof(string));
    
            var idCauseParameter = idCause.HasValue ?
                new ObjectParameter("idCause", idCause) :
                new ObjectParameter("idCause", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CharitableCauseUpdate", causeNameParameter, idCauseParameter);
        }
    
        public virtual int ContactDelete(Nullable<int> idContact)
        {
            var idContactParameter = idContact.HasValue ?
                new ObjectParameter("idContact", idContact) :
                new ObjectParameter("idContact", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ContactDelete", idContactParameter);
        }
    
        public virtual int DonationDelete(Nullable<int> idDonation)
        {
            var idDonationParameter = idDonation.HasValue ?
                new ObjectParameter("idDonation", idDonation) :
                new ObjectParameter("idDonation", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DonationDelete", idDonationParameter);
        }
    
        public virtual int CharitableCauseAddFunds(Nullable<int> idCause, Nullable<decimal> funds)
        {
            var idCauseParameter = idCause.HasValue ?
                new ObjectParameter("idCause", idCause) :
                new ObjectParameter("idCause", typeof(int));
    
            var fundsParameter = funds.HasValue ?
                new ObjectParameter("funds", funds) :
                new ObjectParameter("funds", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CharitableCauseAddFunds", idCauseParameter, fundsParameter);
        }
    
        public virtual int GalleryInsert(string imageName, string path, string thumb)
        {
            var imageNameParameter = imageName != null ?
                new ObjectParameter("imageName", imageName) :
                new ObjectParameter("imageName", typeof(string));
    
            var pathParameter = path != null ?
                new ObjectParameter("path", path) :
                new ObjectParameter("path", typeof(string));
    
            var thumbParameter = thumb != null ?
                new ObjectParameter("thumb", thumb) :
                new ObjectParameter("thumb", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GalleryInsert", imageNameParameter, pathParameter, thumbParameter);
        }
    
        public virtual int GalleryUpdate(Nullable<int> idImage, string name, string path, string thumb)
        {
            var idImageParameter = idImage.HasValue ?
                new ObjectParameter("idImage", idImage) :
                new ObjectParameter("idImage", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var pathParameter = path != null ?
                new ObjectParameter("path", path) :
                new ObjectParameter("path", typeof(string));
    
            var thumbParameter = thumb != null ?
                new ObjectParameter("thumb", thumb) :
                new ObjectParameter("thumb", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GalleryUpdate", idImageParameter, nameParameter, pathParameter, thumbParameter);
        }
    
        public virtual int GalleryDelete(Nullable<int> idImage)
        {
            var idImageParameter = idImage.HasValue ?
                new ObjectParameter("idImage", idImage) :
                new ObjectParameter("idImage", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GalleryDelete", idImageParameter);
        }
    
        public virtual int PollAnswerInsert(string answer, Nullable<int> idQuestion)
        {
            var answerParameter = answer != null ?
                new ObjectParameter("answer", answer) :
                new ObjectParameter("answer", typeof(string));
    
            var idQuestionParameter = idQuestion.HasValue ?
                new ObjectParameter("idQuestion", idQuestion) :
                new ObjectParameter("idQuestion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PollAnswerInsert", answerParameter, idQuestionParameter);
        }
    
        public virtual int PollAnswerDelete(Nullable<int> idAnswer)
        {
            var idAnswerParameter = idAnswer.HasValue ?
                new ObjectParameter("idAnswer", idAnswer) :
                new ObjectParameter("idAnswer", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PollAnswerDelete", idAnswerParameter);
        }
    
        public virtual int PollAnswerUpdate(Nullable<int> idAnswer, string answer, Nullable<int> score, Nullable<int> idQuestion)
        {
            var idAnswerParameter = idAnswer.HasValue ?
                new ObjectParameter("idAnswer", idAnswer) :
                new ObjectParameter("idAnswer", typeof(int));
    
            var answerParameter = answer != null ?
                new ObjectParameter("answer", answer) :
                new ObjectParameter("answer", typeof(string));
    
            var scoreParameter = score.HasValue ?
                new ObjectParameter("score", score) :
                new ObjectParameter("score", typeof(int));
    
            var idQuestionParameter = idQuestion.HasValue ?
                new ObjectParameter("idQuestion", idQuestion) :
                new ObjectParameter("idQuestion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PollAnswerUpdate", idAnswerParameter, answerParameter, scoreParameter, idQuestionParameter);
        }
    
        public virtual int PollQuestionInsert(string question, Nullable<int> active)
        {
            var questionParameter = question != null ?
                new ObjectParameter("question", question) :
                new ObjectParameter("question", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("active", active) :
                new ObjectParameter("active", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PollQuestionInsert", questionParameter, activeParameter);
        }
    
        public virtual int PollQuestionUpdate(Nullable<int> idQuestion, string question, Nullable<int> active)
        {
            var idQuestionParameter = idQuestion.HasValue ?
                new ObjectParameter("idQuestion", idQuestion) :
                new ObjectParameter("idQuestion", typeof(int));
    
            var questionParameter = question != null ?
                new ObjectParameter("question", question) :
                new ObjectParameter("question", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("active", active) :
                new ObjectParameter("active", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PollQuestionUpdate", idQuestionParameter, questionParameter, activeParameter);
        }
    
        public virtual int PollQuestionDelete(Nullable<int> idQuestion)
        {
            var idQuestionParameter = idQuestion.HasValue ?
                new ObjectParameter("idQuestion", idQuestion) :
                new ObjectParameter("idQuestion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PollQuestionDelete", idQuestionParameter);
        }
    
        public virtual int UserDelete(Nullable<int> idUser)
        {
            var idUserParameter = idUser.HasValue ?
                new ObjectParameter("idUser", idUser) :
                new ObjectParameter("idUser", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UserDelete", idUserParameter);
        }
    
        public virtual int UserUpdate(Nullable<int> idUser, string email, string password, Nullable<int> role)
        {
            var idUserParameter = idUser.HasValue ?
                new ObjectParameter("idUser", idUser) :
                new ObjectParameter("idUser", typeof(int));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var roleParameter = role.HasValue ?
                new ObjectParameter("role", role) :
                new ObjectParameter("role", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UserUpdate", idUserParameter, emailParameter, passwordParameter, roleParameter);
        }
    
        public virtual int InterestingFactDelete(Nullable<int> idFact)
        {
            var idFactParameter = idFact.HasValue ?
                new ObjectParameter("idFact", idFact) :
                new ObjectParameter("idFact", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InterestingFactDelete", idFactParameter);
        }
    
        public virtual int InterestingFactInsert(string fact)
        {
            var factParameter = fact != null ?
                new ObjectParameter("fact", fact) :
                new ObjectParameter("fact", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InterestingFactInsert", factParameter);
        }
    
        public virtual int InterestingFactUpdate(Nullable<int> idFact, string fact)
        {
            var idFactParameter = idFact.HasValue ?
                new ObjectParameter("idFact", idFact) :
                new ObjectParameter("idFact", typeof(int));
    
            var factParameter = fact != null ?
                new ObjectParameter("fact", fact) :
                new ObjectParameter("fact", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InterestingFactUpdate", idFactParameter, factParameter);
        }
    
        public virtual int EventInsert(string eventDescr, Nullable<int> idUser, Nullable<System.DateTime> time)
        {
            var eventDescrParameter = eventDescr != null ?
                new ObjectParameter("eventDescr", eventDescr) :
                new ObjectParameter("eventDescr", typeof(string));
    
            var idUserParameter = idUser.HasValue ?
                new ObjectParameter("idUser", idUser) :
                new ObjectParameter("idUser", typeof(int));
    
            var timeParameter = time.HasValue ?
                new ObjectParameter("time", time) :
                new ObjectParameter("time", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EventInsert", eventDescrParameter, idUserParameter, timeParameter);
        }
    
        public virtual int PollSetAllInactive()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PollSetAllInactive");
        }
    
        public virtual int PollDeleteAllRelatedAnswers(Nullable<int> idQuestion)
        {
            var idQuestionParameter = idQuestion.HasValue ?
                new ObjectParameter("idQuestion", idQuestion) :
                new ObjectParameter("idQuestion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PollDeleteAllRelatedAnswers", idQuestionParameter);
        }
    }
}
